name: Release Images
on:
  workflow_dispatch:

concurrency:
  group: ci-release-${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  update-main-branch:
    name: Update main branch
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: everlytic/branch-merge@1.1.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_ref: "develop"
          target_branch: "main"
          commit_message_template: "[Automated] Merged {source_ref} into target {target_branch}"

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [update-main-branch]
    outputs:
      id: ${{ steps.release.outputs.id }}
      release_tag: ${{ steps.release_tag.outputs.release_tag }}
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          ref: "main"

      - name: Get Time
        id: time
        run: echo "::set-output name=time::$(date +'%Y%m%d-%H%M')"

      - name: Generate Release Tag
        id: release_tag
        run: |
          version="v1.0.0"
          tag_name="${version}-${{ steps.time.outputs.time }}"
          echo "release_tag=${tag_name}" >> $GITHUB_ENV
          echo "Generated Release Tag: ${tag_name}"

      - name: Create and Push Git Tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git tag -a "$release_tag" -m "Release $release_tag"
          git push origin "$release_tag"

      - name: Create GitHub Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.release_tag }}
          tag_name: ${{ env.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true

  setup:
    name: Create Matrix
    runs-on: ubuntu-latest
    needs: [update-main-branch, release]
    outputs:
      configfiles: ${{ steps.set-matrix.outputs.configfiles }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Matrix
        id: set-matrix
        run: |
          JSON=$(find configs -type f -name "*.conf" -printf '%f\n' | sed '/config*/d;s#.conf##' | jq -R -s -c 'split("\n")[:-1]')
          echo "configfiles=${JSON}" >> $GITHUB_OUTPUT

  build:
    name: Build Images
    runs-on: ubuntu-latest
    needs: [release, setup]
    strategy:
      matrix:
        configfile: ${{ fromJson(needs.setup.outputs.configfiles) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build
        uses: ./actions/build-image
        with:
          configfile: ${{ matrix.configfile }}

      - name: Compress Image
        run: |
          cd build/output/images/
          xz -efkvzT0 *.img

      - name: Calculate Checksums
        run: |
          cd build/output/images/
          sha256sum *.img.xz > *.img.xz.sha256

      - name: Upload Files to Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/output/images/*
          tag_name: ${{ env.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
