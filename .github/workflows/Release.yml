name: Release Images

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Numéro de version (ex: v1.5.0)"
        required: true
        type: string

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.id }}
      release_tag: ${{ github.event.inputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Récupère tout l'historique Git pour gérer les tags

      - name: Vérifier si le tag existe déjà
        id: check_tag
        run: |
          if git rev-parse "refs/tags/${{ github.event.inputs.version }}" >/dev/null 2>&1; then
            echo "Tag déjà existant!"
            exit 1
          fi

      - name: Créer et Pousser le Tag Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git tag -a "${{ github.event.inputs.version }}" -m "Release ${{ github.event.inputs.version }}"
          git push origin "${{ github.event.inputs.version }}"

      - name: Créer la Release GitHub
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: "Release ${{ github.event.inputs.version }}"
          body: "Nouvelle version ${{ github.event.inputs.version }} disponible"
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

  download-build:
    name: Récupérer le dernier Build Réussi
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Télécharger les fichiers du dernier build
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: BuildImages.yml
          workflow_conclusion: success
          branch: develop
          path: ./build/output/images/
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Vérifier les fichiers téléchargés
        run: |
          echo "Liste des fichiers téléchargés :"
          ls -lah ./build/output/images/

  upload-files:
    name: Upload Files to Release
    runs-on: ubuntu-latest
    needs: [release, download-build]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Rechercher les fichiers d'image
        run: |
          echo "Liste des fichiers à uploader :"
          ls -lah ./build/output/images/

      - name: Upload Image Compressée
        uses: softprops/action-gh-release@v1
        with:
          files: ./build/output/images/*.img.xz
          tag_name: ${{ needs.release.outputs.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Checksum
        uses: softprops/action-gh-release@v1
        with:
          files: ./build/output/images/*.sha256
          tag_name: ${{ needs.release.outputs.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Metadata
        uses: softprops/action-gh-release@v1
        with:
          files: ./build/output/images/*.txt
          tag_name: ${{ needs.release.outputs.release_tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
